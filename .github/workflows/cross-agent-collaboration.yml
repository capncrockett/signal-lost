name: Cross-Agent Collaboration

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  pull_request_review:
    types: [submitted]
  issue_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  check-collaboration:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request || contains(github.event.issue.html_url, '/pull/') }}

    steps:
      - uses: actions/checkout@v4

      - name: Determine PR number and agent type
        id: pr-info
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" || "${{ github.event_name }}" == "pull_request_review" ]]; then
            echo "pr_number=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
            PR_HEAD_REF="${{ github.event.pull_request.head.ref }}"
          else
            # For issue_comment events, extract PR number from issue URL
            PR_NUMBER=$(echo "${{ github.event.issue.html_url }}" | grep -o '[0-9]\+$')
            echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT

            # Need to fetch PR details to get the head ref
            PR_DETAILS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER")
            PR_HEAD_REF=$(echo "$PR_DETAILS" | jq -r .head.ref)
          fi

          # Determine agent type based on branch name
          if [[ "$PR_HEAD_REF" == feature/alpha/* ]]; then
            echo "agent=alpha" >> $GITHUB_OUTPUT
            echo "other_agent=beta" >> $GITHUB_OUTPUT
            echo "This is an Alpha agent PR"
          elif [[ "$PR_HEAD_REF" == feature/beta/* ]]; then
            echo "agent=beta" >> $GITHUB_OUTPUT
            echo "other_agent=alpha" >> $GITHUB_OUTPUT
            echo "This is a Beta agent PR"
          else
            echo "agent=unknown" >> $GITHUB_OUTPUT
            echo "other_agent=unknown" >> $GITHUB_OUTPUT
            echo "Unknown agent type"
          fi

      - name: Check for other agent's approval
        id: check-approval
        if: ${{ github.event_name == 'pull_request_review' && github.event.review.state == 'approved' }}
        run: |
          # Get the reviewer's login
          REVIEWER="${{ github.event.review.user.login }}"

          # Check if the reviewer is from the other agent
          # This is a simplified check - in a real scenario, you'd have a more robust way to identify agents
          if [[ "${{ steps.pr-info.outputs.agent }}" == "alpha" && "$REVIEWER" == "CSL-Beta" ]]; then
            echo "approved_by_other_agent=true" >> $GITHUB_OUTPUT
            echo "PR approved by Beta agent"
          elif [[ "${{ steps.pr-info.outputs.agent }}" == "beta" && "$REVIEWER" == "capncrockett" ]]; then
            echo "approved_by_other_agent=true" >> $GITHUB_OUTPUT
            echo "PR approved by Alpha agent"
          else
            echo "approved_by_other_agent=false" >> $GITHUB_OUTPUT
            echo "PR not approved by the other agent"
          fi

      - name: Check for other agent's comments
        id: check-comments
        if: ${{ github.event_name == 'issue_comment' }}
        run: |
          # Get the commenter's login
          COMMENTER="${{ github.event.comment.user.login }}"

          # Check if the comment is from the other agent
          if [[ "${{ steps.pr-info.outputs.agent }}" == "alpha" && "$COMMENTER" == "CSL-Beta" ]]; then
            echo "comment_by_other_agent=true" >> $GITHUB_OUTPUT
            echo "Comment by Beta agent"
          elif [[ "${{ steps.pr-info.outputs.agent }}" == "beta" && "$COMMENTER" == "capncrockett" ]]; then
            echo "comment_by_other_agent=true" >> $GITHUB_OUTPUT
            echo "Comment by Alpha agent"
          else
            echo "comment_by_other_agent=false" >> $GITHUB_OUTPUT
            echo "Comment not by the other agent"
          fi

      - name: Generate collaboration report
        run: |
          echo "# Cross-Agent Collaboration Report" > collaboration-report.md
          echo "" >> collaboration-report.md

          echo "## PR Information" >> collaboration-report.md
          echo "- PR #${{ steps.pr-info.outputs.pr_number }}" >> collaboration-report.md
          echo "- Agent: ${{ steps.pr-info.outputs.agent }}" >> collaboration-report.md
          echo "" >> collaboration-report.md

          if [[ "${{ github.event_name }}" == "pull_request_review" && "${{ github.event.review.state }}" == "approved" ]]; then
            if [[ "${{ steps.check-approval.outputs.approved_by_other_agent }}" == "true" ]]; then
              echo "## Approval Status" >> collaboration-report.md
              echo "âœ… This PR has been approved by the ${{ steps.pr-info.outputs.other_agent }} agent" >> collaboration-report.md
              echo "" >> collaboration-report.md
              echo "Great collaboration! The PR can now be merged." >> collaboration-report.md
            fi
          elif [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            if [[ "${{ steps.check-comments.outputs.comment_by_other_agent }}" == "true" ]]; then
              echo "## Comment Notification" >> collaboration-report.md
              echo "ðŸ’¬ The ${{ steps.pr-info.outputs.other_agent }} agent has commented on this PR" >> collaboration-report.md
              echo "" >> collaboration-report.md
              echo "Please review their feedback and address any concerns." >> collaboration-report.md
            fi
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "## Collaboration Status" >> collaboration-report.md
            echo "ðŸ”„ Waiting for review from the ${{ steps.pr-info.outputs.other_agent }} agent" >> collaboration-report.md
            echo "" >> collaboration-report.md
            echo "Please make sure to request a review from the ${{ steps.pr-info.outputs.other_agent }} agent." >> collaboration-report.md
          fi

      - name: Comment on PR
        if: ${{ (github.event_name == 'pull_request_review' && steps.check-approval.outputs.approved_by_other_agent == 'true') || (github.event_name == 'issue_comment' && steps.check-comments.outputs.comment_by_other_agent == 'true') || github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('collaboration-report.md', 'utf8');

            const prNumber = ${{ steps.pr-info.outputs.pr_number }};

            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });
